# Generated by Django 3.1.3 on 2020-11-23 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('vocabs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('created', models.IntegerField()),
                ('meta', models.BinaryField()),
                ('session', models.BooleanField()),
            ],
            options={
                'db_table': 'dataset',
            },
        ),
        migrations.CreateModel(
            name='NerDataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ner_name', models.CharField(help_text='ner_name', max_length=250, verbose_name='ner name')),
                ('ner_created', models.IntegerField(blank=True, help_text='ner_created', null=True, verbose_name='ner created')),
                ('ner_meta', models.JSONField(blank=True, help_text='ner_meta', null=True, verbose_name='ner meta')),
                ('ner_description', models.TextField(blank=True, help_text='ner_description', null=True, verbose_name='ner description')),
                ('ner_period', models.CharField(blank=True, help_text='ner_period', max_length=250, null=True, verbose_name='ner period')),
                ('ner_startscript', models.TextField(blank=True, help_text='Command prompt to start a prodigy server', null=True, verbose_name='start a server')),
                ('ner_annotator', models.ManyToManyField(blank=True, help_text='Annotators working on this project', related_name='rvn_part_of_dataset', to=settings.AUTH_USER_MODEL, verbose_name='Annotators')),
                ('ner_genre', models.ManyToManyField(blank=True, help_text='genre', related_name='rvn_genre_of_nerdataset', to='vocabs.SkosConcept', verbose_name='genre')),
            ],
            options={
                'verbose_name': 'ner data set',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProdigyServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_hash', models.CharField(max_length=250, unique=True)),
                ('port', models.IntegerField()),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myprodigy.nerdataset')),
            ],
        ),
        migrations.CreateModel(
            name='NerSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_hash', models.BigIntegerField(blank=True, help_text='input_hash', null=True, verbose_name='input hash')),
                ('task_hash', models.BigIntegerField(blank=True, help_text='task_hash', null=True, verbose_name='task hash')),
                ('text', models.TextField(blank=True, help_text='text', null=True, verbose_name='text')),
                ('answer', models.CharField(blank=True, default='accept', help_text='answer', max_length=50, null=True, verbose_name='answer')),
                ('orig_example', models.JSONField(blank=True, help_text='orig_example', null=True, verbose_name='orig example')),
                ('annotator', models.ForeignKey(blank=True, help_text='Creator of the Annotation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_annotates', to=settings.AUTH_USER_MODEL, verbose_name='annotator')),
                ('dataset', models.ManyToManyField(blank=True, help_text='dataset', related_name='rvn_has_nersample', to='myprodigy.NerDataSet', verbose_name='dataset')),
                ('entities', models.ManyToManyField(blank=True, help_text='entities', related_name='rvn_mentioned_in_nersample', to='vocabs.SkosConcept', verbose_name='entities')),
            ],
            options={
                'verbose_name': 'ner sample',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_hash', models.BigIntegerField()),
                ('task_hash', models.BigIntegerField()),
                ('content', models.BinaryField()),
                ('link', models.ManyToManyField(db_table='link', related_name='rvn_has_example', to='myprodigy.Dataset')),
            ],
            options={
                'db_table': 'example',
            },
        ),
    ]
